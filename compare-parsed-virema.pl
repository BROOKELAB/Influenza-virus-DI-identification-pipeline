#!/usr/bin/perl -w

# Usage - perl compare-parsed-virema.pl parsed-virema-file1.txt parsed-virema-file2.txt shared-table-output.txt
# This script compares two input files generated by parse-recomb-results-Fuzz.pl. It
# returns an output file in tab-demilited table format which describes the number of
# shared versus unique DIs b/t the two files, per segment.

open (FILE1, "$ARGV[0]") or die "Could not open parsed file $ARGV[0]!\n";
open (FILE2, "$ARGV[1]") or die "Could not open parsed file $ARGV[1]!\n";
open (OUTFILE, ">$ARGV[2]") or die "Could not open output file $ARGV[2]!\n";


# Hash of file 1
my %file1hash = ();
$header = <FILE1>;
while(<FILE1>){
        chomp;
        @arr = split(/\t/,$_);
        $key = $arr[0] . "_" . $arr[1] . "_" . $arr[2];
        $value = $arr[5];
        $file1hash{$key} = $value;
}

# Hash of file 2
my %file2hash = ();
$header = <FILE2>;
while(<FILE2>){
        chomp;
        @arr = split(/\t/,$_);
        $key = $arr[0] . "_" . $arr[1] . "_" . $arr[2];
        $value = $arr[5];
        $file2hash{$key} = $value;
}

#Sort out unique vs. shared DIs
my %mergehash = (%file1hash, %file2hash);
my %shared = ();
my %file1uniq = ();
my %file2uniq = ();

for $k (keys %mergehash){
        @arr = split(/_/,$k);

        if(exists $file1hash{$k} && exists $file2hash{$k}){
                if(exists $shared{$arr[0]}){ $shared{$arr[0]}++;}
                else{ $shared{$arr[0]} = 1;}
        }
        elsif(exists $file1hash{$k}){
                if(exists $file1uniq{$arr[0]}){ $file1uniq{$arr[0]}++;}
                else{ $file1uniq{$arr[0]} = 1;}
        }
        else{
                if(exists $file2uniq{$arr[0]}){ $file2uniq{$arr[0]}++;}
                else{ $file2uniq{$arr[0]} = 1;}
        }
}

# Print out table
my %merge3 = (%shared, (%file1uniq,%file2uniq));
print OUTFILE "Segment\tShared\tFile1_Unique\tFile2_Unique\n";

for $k (sort keys %merge3){
        my $sh = 0; #Shared to be printed
        my $f1 = 0; #File1 uniq to be printed
        my $f2 = 0; #File2 uniq to be printed

        if(exists $shared{$k}){ $sh = $shared{$k};}
        if(exists $file1uniq{$k}){ $f1 = $file1uniq{$k};}
        if(exists $file2uniq{$k}){ $f2 = $file2uniq{$k};}

        print OUTFILE "$k\t$sh\t$f1\t$f2\n";
}
